.F....F...F.....F.....F.F...FFF...F...............F................FFF...........FFF.....FFF...FF...F......................FF...............................F.FF...........F.F..........F........F.F.F.F...F.F.F.......F...................F....F...........F....F.........F..............FF.........F.........F...........F.....F...........F................F....F.....
======================================================================
FAIL: test_ba (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'background-attachment' and test: 'bottom auto'

======================================================================
FAIL: test_bdbn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-bottom-style none' and test: 'border-bottom none'

======================================================================
FAIL: test_bdcl (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-color' and test: 'border-collapse'

======================================================================
FAIL: test_bdfow (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-fit overflow' and test: 'border-fit overwrite'

======================================================================
FAIL: test_bdin (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-bottom-style inset' and test: 'border-image none'

======================================================================
FAIL: test_bdln (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-length' and test: 'border-left none'

======================================================================
FAIL: test_bdn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-bottom-style hidden' and test: 'border none'

======================================================================
FAIL: test_bdr (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-radius' and test: 'border-right'

======================================================================
FAIL: test_bdrn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-right-style none' and test: 'border-right none'

======================================================================
FAIL: test_bds (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-spacing' and test: 'border-style'

======================================================================
FAIL: test_bdtn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'border-top-style none' and test: 'border-top none'

======================================================================
FAIL: test_bgct (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'background-clip content-box' and test: 'background-color transparent'

======================================================================
FAIL: test_bgin (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'background-origin' and test: 'background-image none'

======================================================================
FAIL: test_bgn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'background' and test: 'background none'

======================================================================
FAIL: test_bxshn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'box-shadow none'

======================================================================
FAIL: test_bxzbb (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'box-sizing border-box'

======================================================================
FAIL: test_bxzcb (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'box-sizing content-box'

======================================================================
FAIL: test_cor (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'color red' and test: 'counter-reset'

======================================================================
FAIL: test_cp (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'cursor pointer' and test: 'clip'

======================================================================
FAIL: test_cpa (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'color transparent' and test: 'clip auto'

======================================================================
FAIL: test_ct (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'color transparent' and test: 'content'

======================================================================
FAIL: test_cta (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'color transparent' and test: 'content attr()'

======================================================================
FAIL: test_ctn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'color transparent' and test: 'content normal'

======================================================================
FAIL: test_dtbc (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'display table-caption' and test: 'display table-cell'

======================================================================
FAIL: test_dtbcl (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'display table-cell' and test: 'display table-column'

======================================================================
FAIL: test_fsma (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'font-smooth always' and test: 'font-smooth auto'

======================================================================
FAIL: test_fsmn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'font-smooth nover' and test: 'font-smooth never'

======================================================================
FAIL: test_fsn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'font-smooth nover' and test: 'font-style normal'

======================================================================
FAIL: test_ha (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'height auto'

======================================================================
FAIL: test_la (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'letter-spacing' and test: 'left auto'

======================================================================
FAIL: test_listd (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'list-style-type decimal' and test: 'list-style-type disc'

======================================================================
FAIL: test_ma (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'margin' and test: 'margin auto'

======================================================================
FAIL: test_mahn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'max-height none'

======================================================================
FAIL: test_mawn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'max-width none'

======================================================================
FAIL: test_mba (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'margin-bottom auto'

======================================================================
FAIL: test_mla (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'margin-left auto'

======================================================================
FAIL: test_mra (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'margin-right auto'

======================================================================
FAIL: test_mta (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: '' and test: 'margin-top auto'

======================================================================
FAIL: test_ovsm (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'overflow-style marquee' and test: 'overflow-style move'

======================================================================
FAIL: test_pgbaa (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'page-break-after always' and test: 'page-break-after auto'

======================================================================
FAIL: test_pgbba (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'page-break-before always' and test: 'page-break-before auto'

======================================================================
FAIL: test_pr (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'position relative' and test: 'padding-right'

======================================================================
FAIL: test_ra (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'resize horizontal' and test: 'right auto'

======================================================================
FAIL: test_tal (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'text-align left' and test: 'text-align-last'

======================================================================
FAIL: test_tea (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'text-emphasis accent' and test: 'text-emphasis after'

======================================================================
FAIL: test_teac (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'text-align center' and test: 'text-emphasis accent'

======================================================================
FAIL: test_tht (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'text-height' and test: 'text-height text-size'

======================================================================
FAIL: test_to (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'text-overflow' and test: 'text-outline'

======================================================================
FAIL: test_twn (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'text-wrap none' and test: 'text-wrap normal'

======================================================================
FAIL: test_vab (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'vertical-align baseline' and test: 'vertical-align bottom'

======================================================================
FAIL: test_wa (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'white-space-collapse break-all' and test: 'width auto'

======================================================================
FAIL: test_wobk (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'word-break' and test: 'word-break keep-all'

======================================================================
FAIL: test_wown (__main__.AbbrTests)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "test.py", line 23, in <lambda>
    return lambda self: self.is_eq(a, b)
  File "test.py", line 12, in is_eq
    self.assertEqual(hayaku, test_value, "hayaku: '{0}' and test: '{1}'".format(hayaku, test_value))
AssertionError: hayaku: 'word-wrap none' and test: 'word-wrap normal'

----------------------------------------------------------------------
Ran 361 tests in 0.045s

FAILED (failures=53)
